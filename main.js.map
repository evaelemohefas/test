{"version":3,"sources":["./src/app/@core/route-reusable-strategy.ts","./src/app/i18n/i18n.service.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/environments/.env.ts","./src/app/@shared/index.ts","./src/environments/environment.ts","./src/app/shell/shell.service.ts","./src/app/i18n/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/index.ts","./src/app/@core/core.module.ts","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/@core/logger.service.ts","./src/app/i18n/language-selector.component.ts","./src/app/i18n/language-selector.component.html","./src/app/i18n/i18n.module.ts","./src/app/@shared/loader/loader.component.ts","./src/app/@shared/loader/loader.component.html","./src/app/@shared/shared.module.ts","./src/app/shell/shell-routing.module.ts","./src/app/app-routing.module.ts","./src/app/material.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void {}\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // Reuse the route if the RouteConfig is the same, or if both routes use the\n    // same component, because the latter can have different RouteConfigs.\n    return (\n      future.routeConfig === curr.routeConfig ||\n      Boolean(future.routeConfig?.component && future.routeConfig?.component === curr.routeConfig?.component)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Logger } from '@core/logger.service';\nimport enUS from '../../translations/en-US.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class I18nService {\n  defaultLanguage!: string;\n  supportedLanguages!: string[];\n\n  private langChangeSubscription!: Subscription;\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    // Warning: this subscription will always be alive for the app's lifetime\n    this.langChangeSubscription = this.translateService.onLangChange.subscribe((event: LangChangeEvent) => {\n      localStorage.setItem(languageKey, event.lang);\n    });\n  }\n\n  /**\n   * Cleans up language change subscription.\n   */\n  destroy() {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find((supportedLanguage) => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\n// import { MediaChange, MediaObserver } from '@angular/flex-layout';\n// import { MatSidenav } from '@angular/material/sidenav';\n// import { filter } from 'rxjs/operators';\n\n// import { UntilDestroy, untilDestroyed } from '@core';\n\n// @UntilDestroy()\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss'],\n})\nexport class ShellComponent implements OnInit {\n  // @ViewChild('sidenav', { static: false }) sidenav!: MatSidenav;\n\n  constructor() {}\n\n  ngOnInit() {\n    // Automatically close side menu on screens > sm breakpoint\n    // this.media\n    //   .asObservable()\n    //   .pipe(\n    //     filter((changes: MediaChange[]) =>\n    //       changes.some((change) => change.mqAlias !== 'xs' && change.mqAlias !== 'sm')\n    //     ),\n    //     untilDestroyed(this)\n    //   )\n    //   .subscribe(() => this.sidenav.close());\n  }\n}\n","<div fxFlex>\n  <!-- <app-header [sidenav]=\"sidenav\"></app-header> -->\n  <!-- <mat-sidenav-container fxFill> -->\n    <!-- <mat-sidenav #sidenav mode=\"over\" ngClass.gt-sm=\"has-border\">\n      <nav>\n        <mat-list>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/home\" routerLinkActive=\"active\" (click)=\"sidenav.close()\">\n            <span translate>Home</span>\n          </a>\n          <mat-divider></mat-divider>\n          <a mat-list-item routerLink=\"/about\" routerLinkActive=\"active\" (click)=\"sidenav.close()\">\n            <span translate>About</span>\n          </a>\n          <mat-divider></mat-divider>\n        </mat-list>\n      </nav>\n    </mat-sidenav> -->\n    <!-- <mat-sidenav-content> -->\n      <router-outlet></router-outlet>\n    <!-- </mat-sidenav-content> -->\n  <!-- </mat-sidenav-container> -->\n</div>\n","export const env: { [s: string]: (string | null); } = {\n  'npm_package_version': '1.0.0'\n};\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// `.env.ts` is generated by the `npm run env` command\n// `npm run env` exposes environment variables as JSON for any usage you might\n// want, like displaying the version or getting extra config from your CI bot, etc.\n// This is useful for granularity you might need beyond just the environment.\n// Note that as usual, any environment variables you expose through it will end up in your\n// bundle, and you should not use it for any sensitive information like passwords or keys.\nimport { env } from './.env';\n\nexport const environment = {\n  production: false,\n  version: env.npm_package_version + '-dev',\n  serverUrl: '/api',\n  defaultLanguage: 'en-US',\n  supportedLanguages: ['en-US'],\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Routes, Route } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Shell {\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return The new route using shell as the base.\n   */\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n    };\n  }\n}\n","export * from './i18n.module';\nexport * from './i18n.service';\nexport * from './language-selector.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, UntilDestroy, untilDestroyed } from '@core';\nimport { I18nService } from '@app/i18n';\n\nconst log = new Logger('App');\n\n@UntilDestroy()\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  constructor(\n    private router: Router,\n    private activatedRoute: ActivatedRoute,\n    private titleService: Title,\n    private translateService: TranslateService,\n    private i18nService: I18nService\n  ) {}\n\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter((event) => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter((route) => route.outlet === 'primary'),\n        switchMap((route) => route.data),\n        untilDestroyed(this)\n      )\n      .subscribe((event) => {\n        const title = event.title;\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.i18nService.destroy();\n  }\n}\n","<router-outlet></router-outlet>\n","export * from './core.module';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from '@ngneat/until-destroy';\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RouteReusableStrategy } from './route-reusable-strategy';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, RouterModule],\n  providers: [\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy,\n    },\n  ],\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n}\n","import { Title } from '@angular/platform-browser';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Input() sidenav!: MatSidenav;\n\n  constructor(private titleService: Title) {}\n\n  ngOnInit() {}\n\n  get title(): string {\n    return this.titleService.getTitle();\n  }\n}\n","<mat-toolbar class=\"mat-elevation-z6 navbar\" color=\"primary\">\n  <div fxHide.gt-sm fxLayoutAlign=\"start center\">\n    <button class=\"menu-button\" mat-icon-button (click)=\"sidenav.toggle()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span class=\"title\">{{ title }}</span>\n  </div>\n  <div fxHide.lt-md>\n    <a class=\"brand\" href=\"https://github.com/ngx-rocket\" translate>APP_NAME</a>\n    <button mat-button routerLink=\"/home\" routerLinkActive=\"active\">\n      <mat-icon>home</mat-icon>\n      <span translate>Home</span>\n    </button>\n    <button mat-button routerLink=\"/about\" routerLinkActive=\"active\">\n      <mat-icon>info</mat-icon>\n      <span translate>About</span>\n    </button>\n  </div>\n  <span fxFlex></span>\n  <app-language-selector icon=\"true\"></app-language-selector>\n</mat-toolbar>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material.module';\n\nimport { environment } from '@env/environment';\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { ShellModule } from './shell/shell.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    TranslateModule.forRoot(),\n    BrowserAnimationsModule,\n    MaterialModule,\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    AppRoutingModule, // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { I18nModule } from '@app/i18n';\nimport { MaterialModule } from '@app/material.module';\nimport { ShellComponent } from './shell.component';\nimport { HeaderComponent } from './header/header.component';\nimport { ShellRoutingModule } from './shell-routing.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    FlexLayoutModule,\n    MaterialModule,\n    I18nModule,\n    RouterModule,\n    ShellRoutingModule,\n  ],\n  declarations: [HeaderComponent, ShellComponent],\n})\nexport class ShellModule {}\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug,\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) {}\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach((output) => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { I18nService } from './i18n.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss'],\n})\nexport class LanguageSelectorComponent implements OnInit {\n  @Input() icon = false;\n\n  constructor(private i18nService: I18nService) {}\n\n  ngOnInit() {}\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n}\n","<button *ngIf=\"icon; else text\" mat-icon-button [matMenuTriggerFor]=\"languageMenu\">\n  <mat-icon>language</mat-icon>\n</button>\n<ng-template #text>\n  <button mat-raised-button color=\"primary\" [matMenuTriggerFor]=\"languageMenu\">\n    {{ currentLanguage }}\n  </button>\n</ng-template>\n<mat-menu #languageMenu=\"matMenu\">\n  <button mat-menu-item *ngFor=\"let language of languages\" (click)=\"setLanguage(language)\">\n    {{ language }}\n  </button>\n</mat-menu>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from '@app/material.module';\nimport { LanguageSelectorComponent } from './language-selector.component';\n\n@NgModule({\n  imports: [CommonModule, TranslateModule, FlexLayoutModule, MaterialModule],\n  declarations: [LanguageSelectorComponent],\n  exports: [LanguageSelectorComponent],\n})\nexport class I18nModule {}\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss'],\n})\nexport class LoaderComponent implements OnInit {\n  @Input() isLoading = false;\n  @Input() size = 1;\n  @Input() message: string | undefined;\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div [hidden]=\"!isLoading\">\n  <mat-progress-spinner mode=\"indeterminate\" [strokeWidth]=\"2\" [diameter]=\"32 * size\"></mat-progress-spinner>\n  <span class=\"message\">{{ message }}</span>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialModule } from '@app/material.module';\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  imports: [FlexLayoutModule, MaterialModule, CommonModule],\n  declarations: [LoaderComponent],\n  exports: [LoaderComponent],\n})\nexport class SharedModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShellComponent } from './shell.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShellComponent,\n    children: [\n      {\n        path: 'home',\n        loadChildren: () => import('../home/home.module').then((m) => m.HomeModule),\n      },\n      // Fallback when no prior route is matched\n      { path: '', redirectTo: 'home', pathMatch: 'full' },\n    ],\n    // Reuse ShellComponent instance when navigating between child views\n    data: { reuse: true },\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ShellRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  Shell.childRoutes([{ path: 'home', loadChildren: () => import('./home/home.module').then((m) => m.HomeModule) }]),\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })],\n  exports: [RouterModule],\n  providers: [],\n})\nexport class AppRoutingModule {}\n","/*\n * This module imports and re-exports all Angular Material modules for convenience,\n * so only 1 module import is needed in your feature modules.\n * See https://material.angular.io/guide/getting-started#step-3-import-the-component-modules.\n *\n * To optimize your production builds, you should only import the components used in your app.\n */\n\nimport { NgModule } from '@angular/core';\nimport {\n  MatCommonModule,\n  MatLineModule,\n  MatNativeDateModule,\n  MatOptionModule,\n  MatPseudoCheckboxModule,\n  MatRippleModule,\n} from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCommonModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatLineModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatOptionModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatPseudoCheckboxModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSlideToggleModule,\n    MatSliderModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatStepperModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ],\n})\nexport class MaterialModule {}\n","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@app/app.module';\nimport { environment } from '@env/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}